{
  "api/Game.GameManagerOverride.html": {
    "href": "api/Game.GameManagerOverride.html",
    "title": "Class GameManagerOverride | 游戏文档",
    "keywords": "Class GameManagerOverride 游戏管理器覆写，游戏功能的具体实现 Inheritance System.Object Singleton < GameManager > GameManager GameManagerOverride Inherited Members GameManager.PlayerIndex GameManager.IsGameOver Singleton<GameManager>.Instance Namespace : Game Assembly : cs.temp.dll.dll Syntax public class GameManagerOverride : GameManager Properties CollectableResourcesDatas 所有可采集资源 Declaration public override IReadOnlyCollection<CollectableResourcesData> CollectableResourcesDatas { get; } Property Value Type Description IReadOnlyCollection < CollectableResourcesData > Overrides GameManager.CollectableResourcesDatas GameMode 游戏模式 Declaration public GameMode GameMode { get; set; } Property Value Type Description GameMode gameModeData 游戏模式数据 Declaration public GameModeData gameModeData { get; set; } Property Value Type Description GameModeData mapData 游戏地图数据 Declaration public MapData mapData { get; set; } Property Value Type Description MapData OverrideInstance 此派生类实例 Declaration public static GameManagerOverride OverrideInstance { get; set; } Property Value Type Description GameManagerOverride PlayerCampDatas Declaration public List<CampData> PlayerCampDatas { get; set; } Property Value Type Description List < CampData > PlayerControllers 所有玩家控制器 Declaration public override IReadOnlyList<PlayerController> PlayerControllers { get; } Property Value Type Description IReadOnlyList < PlayerController > Overrides GameManager.PlayerControllers PlayerInfos 玩家信息 Declaration public PlayerInfo[] PlayerInfos { get; set; } Property Value Type Description PlayerInfo [] Methods Awake() Declaration protected override void Awake() Overrides GameInterface.Singleton<GameInterface.GameManager>.Awake() DestroySoldier(Soldier) 摧毁士兵 Declaration public override void DestroySoldier(Soldier soldier) Parameters Type Name Description Soldier soldier 要摧毁的士兵 Overrides GameManager.DestroySoldier(Soldier) SpawnBase(Vector2, CampData, PlayerController) 生成基地 Declaration public override OperationalBase SpawnBase(Vector2 SpawnPoint, CampData campData, PlayerController playerController) Parameters Type Name Description Vector2 SpawnPoint 生成位置 CampData campData 阵营数据 PlayerController playerController 玩家 Returns Type Description OperationalBase 基地脚本 Overrides GameManager.SpawnBase(Vector2, CampData, PlayerController) SpawnCollectableResource(Vector2, CollectableResourcesData, Single) 生成可采集资源 Declaration public override CollectableResources SpawnCollectableResource(Vector2 SpawnPoint, CollectableResourcesData resourcesData, float scale) Parameters Type Name Description Vector2 SpawnPoint 生成位置 CollectableResourcesData resourcesData 资源数据 System.Single scale 缩放倍率 Returns Type Description CollectableResources 可采集资源脚本 Overrides GameManager.SpawnCollectableResource(Vector2, CollectableResourcesData, Single) SpawnSoldier(Vector2, ISoldierSpawnInfo, OperationalBase) 生成士兵 Declaration public override Soldier SpawnSoldier(Vector2 SpawnPoint, ISoldierSpawnInfo soldierInfo, OperationalBase operationalBase) Parameters Type Name Description Vector2 SpawnPoint 生成位置 ISoldierSpawnInfo soldierInfo OperationalBase operationalBase 基地脚本 Returns Type Description Soldier 士兵脚本 Overrides GameManager.SpawnSoldier(Vector2, ISoldierSpawnInfo, OperationalBase) StartGame() 开始游戏 Declaration public void StartGame()"
  },
  "api/Game.html": {
    "href": "api/Game.html",
    "title": "Namespace Game | 游戏文档",
    "keywords": "Namespace Game Classes GameManagerOverride 游戏管理器覆写，游戏功能的具体实现 SceneLoader 场景加载器 SoldierSpawnInfo 士兵生成信息"
  },
  "api/Game.SceneLoader.html": {
    "href": "api/Game.SceneLoader.html",
    "title": "Class SceneLoader | 游戏文档",
    "keywords": "Class SceneLoader 场景加载器 Inheritance System.Object Singleton < SceneLoader > SceneLoader Inherited Members Singleton<SceneLoader>.Instance Namespace : Game Assembly : cs.temp.dll.dll Syntax public class SceneLoader : Singleton<SceneLoader> Fields bootstrapSceneName 游戏引导场景名称 Declaration public const string bootstrapSceneName = \"BootstrapScene\" Field Value Type Description System.String mainMenuName 主菜单名称 Declaration public const string mainMenuName = \"MainMenu\" Field Value Type Description System.String Methods Awake() Declaration protected override void Awake() Overrides GameInterface.Singleton<Game.SceneLoader>.Awake() LoadMainMenu() 加载主菜单 Declaration public void LoadMainMenu() LoadMapIE(MapData) 异步加载游戏地图 Declaration public IEnumerator LoadMapIE(MapData mapData) Parameters Type Name Description MapData mapData 地图数据 Returns Type Description IEnumerator LoadSceneIE(MapData, Boolean) 异步加载场景 Declaration public IEnumerator LoadSceneIE(MapData mapData, bool additive) Parameters Type Name Description MapData mapData 地图数据 System.Boolean additive 加载模式 Returns Type Description IEnumerator"
  },
  "api/Game.SoldierSpawnInfo.html": {
    "href": "api/Game.SoldierSpawnInfo.html",
    "title": "Class SoldierSpawnInfo | 游戏文档",
    "keywords": "Class SoldierSpawnInfo 士兵生成信息 Inheritance System.Object SoldierSpawnInfo Implements ISoldierSpawnInfo Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Game Assembly : cs.temp.dll.dll Syntax public class SoldierSpawnInfo : ISoldierSpawnInfo Constructors SoldierSpawnInfo(SoldierData) Declaration public SoldierSpawnInfo(SoldierData soldierData) Parameters Type Name Description SoldierData soldierData 士兵数据 Properties CD 生成冷却时间 Declaration public float CD { get; } Property Value Type Description System.Single IsResourcesEnough 资源是否足够 Declaration public bool IsResourcesEnough { get; } Property Value Type Description System.Boolean SoldierData 士兵生成信息 Declaration public SoldierData SoldierData { get; set; } Property Value Type Description SoldierData Methods GetCDProgress() 获取冷却进度 Declaration public float GetCDProgress() Returns Type Description System.Single GetResourcesEnough(ResourcesWarehouse) 获取是否资源充足 Declaration public void GetResourcesEnough(ResourcesWarehouse resourcesWarehouse) Parameters Type Name Description ResourcesWarehouse resourcesWarehouse StartCD() 开始冷却计时 Declaration public void StartCD() Implements ISoldierSpawnInfo"
  },
  "api/GameHelper.FileHelper.html": {
    "href": "api/GameHelper.FileHelper.html",
    "title": "Class FileHelper | 游戏文档",
    "keywords": "Class FileHelper 文件助手 Inheritance System.Object FileHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameHelper Assembly : cs.temp.dll.dll Syntax public static class FileHelper Methods CheckPath(String, Boolean) 检查路径 Declaration public static bool CheckPath(string path, bool isDirectory) Parameters Type Name Description System.String path System.Boolean isDirectory Returns Type Description System.Boolean GetDirectory(String) 确定路径 Declaration public static void GetDirectory(string path) Parameters Type Name Description System.String path 路径 GetExtension(String) 获取文件后缀 Declaration public static string GetExtension(string path) Parameters Type Name Description System.String path 文件路径 Returns Type Description System.String Load<T>(T, String, String) 加载数据 Declaration public static bool Load<T>(T data, string path, string name = null) Parameters Type Name Description T data 数据 System.String path 加载路径 System.String name 加载名称 Returns Type Description System.Boolean 是否加载成功 Type Parameters Name Description T 加载的数据类型 LoadTexture2DByIO(String, out Byte[]) 使用IO流加载图片 Declaration public static Texture2D LoadTexture2DByIO(string path, out byte[] bytes) Parameters Type Name Description System.String path 路径 System.Byte [] bytes 图片字节 Returns Type Description Texture2D ReadBytes(out Byte[], String, String) 读取字节 Declaration public static bool ReadBytes(out byte[] bytes, string path, string name = null) Parameters Type Name Description System.Byte [] bytes 字节 System.String path 路径 System.String name 名称 Returns Type Description System.Boolean 是否读取成功 ReadText(out String, String, String) 读取文本 Declaration public static bool ReadText(out string text, string path, string name = null) Parameters Type Name Description System.String text 文本 System.String path 路径 System.String name 名称 Returns Type Description System.Boolean 是否读取成功 Save<T>(T, String, String) 保存数据 Declaration public static void Save<T>(T data, string path, string name = null) Parameters Type Name Description T data 数据 System.String path 保存路径 System.String name 保存名称 Type Parameters Name Description T 保存的数据类型 WriteBytes(Byte[], String, String) 写入字节 Declaration public static void WriteBytes(byte[] bytes, string path, string name = null) Parameters Type Name Description System.Byte [] bytes 字节 System.String path 路径 System.String name 名称 WriteText(String, String, String) 写入文本 Declaration public static void WriteText(string text, string path, string name = null) Parameters Type Name Description System.String text 文本 System.String path 路径 System.String name 名称"
  },
  "api/GameHelper.FolderBrowserHelper.html": {
    "href": "api/GameHelper.FolderBrowserHelper.html",
    "title": "Class FolderBrowserHelper | 游戏文档",
    "keywords": "Class FolderBrowserHelper 文件夹浏览器助手 Inheritance System.Object FolderBrowserHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameHelper Assembly : cs.temp.dll.dll Syntax public static class FolderBrowserHelper Fields ALLFILTER Declaration public const string ALLFILTER = \"所有文件(*.*)\\0*.*\\0\" Field Value Type Description System.String IMAGEFILTER Declaration public const string IMAGEFILTER = \"图片文件(*.jpg;*.png)\\0*.jpg;*.png\\0\" Field Value Type Description System.String Methods GetPathFromWindowsExplorer(String) 调用WindowsExploer 并返回所选文件夹路径 Declaration public static string GetPathFromWindowsExplorer(string dialogtitle = \"请选择文件路径\") Parameters Type Name Description System.String dialogtitle 打开对话框的标题 Returns Type Description System.String 所选文件夹路径 OpenFolder(String) 打开目录 Declaration public static void OpenFolder(string path) Parameters Type Name Description System.String path 将要打开的文件目录 SelectOpenFile(Action<String>, String, String) 选择打开文件 Declaration public static void SelectOpenFile(Action<string> callback, string filter = \"所有文件(*.*)\\0*.*\\0\", string initDir = null) Parameters Type Name Description Action < System.String > callback 回调 System.String filter 过滤器 System.String initDir 起始路径 SelectSaveFile(Action<String>, String, String) 选择保存文件路径和名称 Declaration public static void SelectSaveFile(Action<string> callback, string filter = \"所有文件(*.*)\\0*.*\\0\", string initDir = null) Parameters Type Name Description Action < System.String > callback 回调 System.String filter 过滤器 System.String initDir 起始路径"
  },
  "api/GameHelper.html": {
    "href": "api/GameHelper.html",
    "title": "Namespace GameHelper | 游戏文档",
    "keywords": "Namespace GameHelper Classes FileHelper 文件助手 FolderBrowserHelper 文件夹浏览器助手"
  },
  "api/GameInterface.AIController.html": {
    "href": "api/GameInterface.AIController.html",
    "title": "Class AIController | 游戏文档",
    "keywords": "Class AIController 调用AI玩家逻辑，有基地逻辑... Inheritance System.Object AIController Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class AIController : MonoBehaviour Fields playerController 玩家控制器 Declaration public PlayerController playerController Field Value Type Description PlayerController"
  },
  "api/GameInterface.CampData.html": {
    "href": "api/GameInterface.CampData.html",
    "title": "Struct CampData | 游戏文档",
    "keywords": "Struct CampData 阵营数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct CampData Fields basePrefab 基地预制体 Declaration public GameObject basePrefab Field Value Type Description GameObject campImage 阵营图片 Declaration public Sprite campImage Field Value Type Description Sprite campName 阵营名称 Declaration public string campName Field Value Type Description System.String description 阵营描述 Declaration public string description Field Value Type Description System.String gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData soldierDatas 阵营内士兵数据 Declaration public SoldierData[] soldierDatas Field Value Type Description SoldierData []"
  },
  "api/GameInterface.CollectableResources.html": {
    "href": "api/GameInterface.CollectableResources.html",
    "title": "Class CollectableResources | 游戏文档",
    "keywords": "Class CollectableResources 游戏内可采集资源脚本 Inheritance System.Object CollectableResources Implements IAttack Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class CollectableResources : MonoBehaviour, IAttack Properties Base 所属基地 Declaration public OperationalBase Base { get; } Property Value Type Description OperationalBase CurrentHP 当前血量 Declaration public float CurrentHP { get; } Property Value Type Description System.Single GameObject 资源物体 Declaration public GameObject GameObject { get; } Property Value Type Description GameObject PlayerIndex 所属玩家 Declaration public int PlayerIndex { get; } Property Value Type Description System.Int32 ResourcesName 资源名称 Declaration public string ResourcesName { get; } Property Value Type Description System.String Methods GetDamage(Single, IAttack, out Single) 接受伤害 Declaration public bool GetDamage(float attack, IAttack attacker, out float destroyExperience) Parameters Type Name Description System.Single attack 攻击值 IAttack attacker 攻击者 System.Single destroyExperience 摧毁经验 Returns Type Description System.Boolean 是否被摧毁 Init(CollectableResourcesData, Single) 资源初始化 Declaration public void Init(CollectableResourcesData collectableResourcesData, float scale) Parameters Type Name Description CollectableResourcesData collectableResourcesData 资源数据 System.Single scale 缩放倍率 Implements IAttack"
  },
  "api/GameInterface.CollectableResourcesData.html": {
    "href": "api/GameInterface.CollectableResourcesData.html",
    "title": "Struct CollectableResourcesData | 游戏文档",
    "keywords": "Struct CollectableResourcesData 可采集资源数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct CollectableResourcesData Fields collectableResourcesPrefab 可采集资源预制体 Declaration public GameObject collectableResourcesPrefab Field Value Type Description GameObject description 可采集资源描述 Declaration public string description Field Value Type Description System.String gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData initialValue 可采集资源仓库初始值 Declaration public float initialValue Field Value Type Description System.Single resourcesHP 可采集资源血量 Declaration public float resourcesHP Field Value Type Description System.Single resourcesImage 可采集资源图片 Declaration public Sprite resourcesImage Field Value Type Description Sprite resourcesName 可采集资源名称 Declaration public string resourcesName Field Value Type Description System.String resourcesUnitOutput 可采集资源单位产出 Declaration public float resourcesUnitOutput Field Value Type Description System.Single scaleCoefficient 缩放系数 Declaration public float scaleCoefficient Field Value Type Description System.Single"
  },
  "api/GameInterface.GameAssetConfig.html": {
    "href": "api/GameInterface.GameAssetConfig.html",
    "title": "Class GameAssetConfig | 游戏文档",
    "keywords": "Class GameAssetConfig 储存了游戏资产数据 Inheritance System.Object GameAssetConfig Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class GameAssetConfig : ScriptableObject Fields campDatas 阵营数据 Declaration public CampData[] campDatas Field Value Type Description CampData [] collectableResourcesDatas 可采集资源数据 Declaration public CollectableResourcesData[] collectableResourcesDatas Field Value Type Description CollectableResourcesData [] gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData gameModeDatas 游戏模式数据 Declaration public GameModeData[] gameModeDatas Field Value Type Description GameModeData [] mapDatas 地图数据 Declaration public MapData[] mapDatas Field Value Type Description MapData [] noCampSoldierDatas 无阵营士兵数据 Declaration public SoldierData[] noCampSoldierDatas Field Value Type Description SoldierData []"
  },
  "api/GameInterface.GameAssetData.html": {
    "href": "api/GameInterface.GameAssetData.html",
    "title": "Struct GameAssetData | 游戏文档",
    "keywords": "Struct GameAssetData 游戏资产数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct GameAssetData Constructors GameAssetData(Boolean, String) Declaration public GameAssetData(bool isModAsset, string modName) Parameters Type Name Description System.Boolean isModAsset 是否是Mod资产 System.String modName 所属的Mod名称 Fields isModAsset 是否是Mod资产 Declaration public bool isModAsset Field Value Type Description System.Boolean modName 所属的Mod名称 Declaration public string modName Field Value Type Description System.String"
  },
  "api/GameInterface.GameManager.html": {
    "href": "api/GameInterface.GameManager.html",
    "title": "Class GameManager | 游戏文档",
    "keywords": "Class GameManager 游戏管理器基类，提供给外界游戏内部的抽象方法 Inheritance System.Object Singleton < GameManager > GameManager GameManagerOverride Inherited Members Singleton<GameManager>.Instance Singleton<GameManager>.Awake() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public abstract class GameManager : Singleton<GameManager> Properties CollectableResourcesDatas 所有可采集资源 Declaration public abstract IReadOnlyCollection<CollectableResourcesData> CollectableResourcesDatas { get; } Property Value Type Description IReadOnlyCollection < CollectableResourcesData > IsGameOver 游戏是否结束 Declaration public bool IsGameOver { get; protected set; } Property Value Type Description System.Boolean PlayerControllers 所有玩家控制器 Declaration public abstract IReadOnlyList<PlayerController> PlayerControllers { get; } Property Value Type Description IReadOnlyList < PlayerController > PlayerIndex 此玩家的编号 Declaration public int PlayerIndex { get; } Property Value Type Description System.Int32 Methods DestroySoldier(Soldier) 摧毁士兵 Declaration public abstract void DestroySoldier(Soldier soldier) Parameters Type Name Description Soldier soldier 要摧毁的士兵 SpawnBase(Vector2, CampData, PlayerController) 生成基地 Declaration public abstract OperationalBase SpawnBase(Vector2 SpawnPoint, CampData campData, PlayerController playerController) Parameters Type Name Description Vector2 SpawnPoint 生成位置 CampData campData 阵营数据 PlayerController playerController 玩家 Returns Type Description OperationalBase 基地脚本 SpawnCollectableResource(Vector2, CollectableResourcesData, Single) 生成可采集资源 Declaration public abstract CollectableResources SpawnCollectableResource(Vector2 SpawnPoint, CollectableResourcesData resourcesData, float scale) Parameters Type Name Description Vector2 SpawnPoint 生成位置 CollectableResourcesData resourcesData 资源数据 System.Single scale 缩放倍率 Returns Type Description CollectableResources 可采集资源脚本 SpawnSoldier(Vector2, ISoldierSpawnInfo, OperationalBase) 生成士兵 Declaration public abstract Soldier SpawnSoldier(Vector2 SpawnPoint, ISoldierSpawnInfo soldierSpawnInfo, OperationalBase operationalBase) Parameters Type Name Description Vector2 SpawnPoint 生成位置 ISoldierSpawnInfo soldierSpawnInfo 士兵生成数据 OperationalBase operationalBase 基地脚本 Returns Type Description Soldier 士兵脚本"
  },
  "api/GameInterface.GameMode.html": {
    "href": "api/GameInterface.GameMode.html",
    "title": "Class GameMode | 游戏文档",
    "keywords": "Class GameMode 游戏模式，抽象方法定义游戏玩法输赢逻辑 Inheritance System.Object GameMode Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public abstract class GameMode : MonoBehaviour Methods IsGameOver(out PlayerController) 是否游戏结束 每帧调用 Declaration public abstract bool IsGameOver(out PlayerController winner) Parameters Type Name Description PlayerController winner 获胜玩家 Returns Type Description System.Boolean 是否游戏结束 OnGameOver(PlayerController) 游戏结束调用 Declaration public abstract void OnGameOver(PlayerController winner) Parameters Type Name Description PlayerController winner 获胜玩家 OnGameStart(Vector2[], CampData[]) 游戏开始调用 Declaration public abstract void OnGameStart(Vector2[] basePoints, CampData[] playerCampDatas) Parameters Type Name Description Vector2 [] basePoints 地图基地点 CampData [] playerCampDatas"
  },
  "api/GameInterface.GameModeData.html": {
    "href": "api/GameInterface.GameModeData.html",
    "title": "Struct GameModeData | 游戏文档",
    "keywords": "Struct GameModeData 游戏模式数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct GameModeData Fields description 模式描述 Declaration public string description Field Value Type Description System.String gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData gameModePrefab 模式预制体 Declaration public GameObject gameModePrefab Field Value Type Description GameObject modeImage 模式图片 Declaration public Sprite modeImage Field Value Type Description Sprite modeName 模式名称 Declaration public string modeName Field Value Type Description System.String"
  },
  "api/GameInterface.html": {
    "href": "api/GameInterface.html",
    "title": "Namespace GameInterface | 游戏文档",
    "keywords": "Namespace GameInterface Classes AIController 调用AI玩家逻辑，有基地逻辑... CollectableResources 游戏内可采集资源脚本 GameAssetConfig 储存了游戏资产数据 GameManager 游戏管理器基类，提供给外界游戏内部的抽象方法 GameMode 游戏模式，抽象方法定义游戏玩法输赢逻辑 ModManager 模组管理器 模组的入口 OperationalBase 基地脚本，储存了士兵生成信息，基地AI逻辑 PlayerController 玩家控制器，储存了玩家信息，基地，资源 ResourcesWarehouse 玩家的仓库 ResourcesWarehouseItem 仓库储存项目 Singleton<T> 单例模式基类 Soldier 士兵脚本，储存士兵数据，士兵AI Structs CampData 阵营数据 CollectableResourcesData 可采集资源数据 GameAssetData 游戏资产数据 GameModeData 游戏模式数据 MapData 地图数据 PlayerInfo 玩家信息 SoldierAttribute 士兵属性 SoldierCost 生成士兵资源花费 SoldierData 士兵数据 Interfaces IAttack ISoldierSpawnInfo Enums SoldierState 士兵状态 soldierType 士兵类型"
  },
  "api/GameInterface.IAttack.html": {
    "href": "api/GameInterface.IAttack.html",
    "title": "Interface IAttack | 游戏文档",
    "keywords": "Interface IAttack Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public interface IAttack Properties Base 属于哪个基地 Declaration OperationalBase Base { get; } Property Value Type Description OperationalBase CurrentHP 当前血量 Declaration float CurrentHP { get; } Property Value Type Description System.Single GameObject 游戏物体 Declaration GameObject GameObject { get; } Property Value Type Description GameObject PlayerIndex 属于哪个玩家 Declaration int PlayerIndex { get; } Property Value Type Description System.Int32 Methods GetDamage(Single, IAttack, out Single) 接受伤害 Declaration bool GetDamage(float attack, IAttack attacker, out float destroyExperience) Parameters Type Name Description System.Single attack 攻击值 IAttack attacker 攻击者 System.Single destroyExperience 摧毁经验 Returns Type Description System.Boolean 是否被摧毁"
  },
  "api/GameInterface.ISoldierSpawnInfo.html": {
    "href": "api/GameInterface.ISoldierSpawnInfo.html",
    "title": "Interface ISoldierSpawnInfo | 游戏文档",
    "keywords": "Interface ISoldierSpawnInfo Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public interface ISoldierSpawnInfo Properties CD 冷却时间 Declaration float CD { get; } Property Value Type Description System.Single IsResourcesEnough 资源是否足够 Declaration bool IsResourcesEnough { get; } Property Value Type Description System.Boolean SoldierData 士兵数据 Declaration SoldierData SoldierData { get; set; } Property Value Type Description SoldierData Methods GetCDProgress() 获取冷却进度 Declaration float GetCDProgress() Returns Type Description System.Single GetResourcesEnough(ResourcesWarehouse) 获取是否有足够资源 Declaration void GetResourcesEnough(ResourcesWarehouse resourcesWarehouse) Parameters Type Name Description ResourcesWarehouse resourcesWarehouse 仓库 StartCD() 开始冷却计时 Declaration void StartCD()"
  },
  "api/GameInterface.MapData.html": {
    "href": "api/GameInterface.MapData.html",
    "title": "Struct MapData | 游戏文档",
    "keywords": "Struct MapData 地图数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct MapData Fields basePoints 基地生成点 Declaration public Vector2[] basePoints Field Value Type Description Vector2 [] description 地图描述 Declaration public string description Field Value Type Description System.String gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData mapImage 地图图片 Declaration public Sprite mapImage Field Value Type Description Sprite mapMaxXY 地图最大范围坐标 Declaration public Vector2 mapMaxXY Field Value Type Description Vector2 mapMinXY 地图最小范围坐标 Declaration public Vector2 mapMinXY Field Value Type Description Vector2 mapName 地图名称（不是场景文件名称） Declaration public string mapName Field Value Type Description System.String sceneName 场景文件名称 Declaration public string sceneName Field Value Type Description System.String"
  },
  "api/GameInterface.ModManager.html": {
    "href": "api/GameInterface.ModManager.html",
    "title": "Class ModManager | 游戏文档",
    "keywords": "Class ModManager 模组管理器 模组的入口 Inheritance System.Object ModManager Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public abstract class ModManager : ModScript Methods SetGameManagerBaseInstance(GameManager) 设置游戏管理器的单例引用 Declaration public void SetGameManagerBaseInstance(GameManager gameManagerInstance) Parameters Type Name Description GameManager gameManagerInstance 游戏管理器的单例引用"
  },
  "api/GameInterface.OperationalBase.html": {
    "href": "api/GameInterface.OperationalBase.html",
    "title": "Class OperationalBase | 游戏文档",
    "keywords": "Class OperationalBase 基地脚本，储存了士兵生成信息，基地AI逻辑 Inheritance System.Object OperationalBase Implements IAttack Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class OperationalBase : MonoBehaviour, IAttack Fields maxHP 最大血量 Declaration public float maxHP Field Value Type Description System.Single soldiers 已生成的士兵 Declaration protected List<Soldier> soldiers Field Value Type Description List < Soldier > soldierSpawnPoint 士兵生成点 Declaration public Transform soldierSpawnPoint Field Value Type Description Transform Properties Base 基地 Declaration public OperationalBase Base { get; } Property Value Type Description OperationalBase BaseCampName 基地阵营名称 Declaration public string BaseCampName { get; } Property Value Type Description System.String CurrentHP 当前血量 Declaration public float CurrentHP { get; protected set; } Property Value Type Description System.Single CurrentSoldiers 已生成的士兵 Declaration public List<Soldier> CurrentSoldiers { get; } Property Value Type Description List < Soldier > EnemyBase 敌方基地 Declaration public OperationalBase EnemyBase { get; set; } Property Value Type Description OperationalBase GameObject 游戏物体 Declaration public GameObject GameObject { get; } Property Value Type Description GameObject Level 基地等级 Declaration public int Level { get; protected set; } Property Value Type Description System.Int32 Player 基地玩家 Declaration public PlayerController Player { get; } Property Value Type Description PlayerController PlayerIndex 玩家索引 Declaration public int PlayerIndex { get; } Property Value Type Description System.Int32 SoldierSpawnInfos 基地生成士兵信息 Declaration public IReadOnlyCollection<ISoldierSpawnInfo> SoldierSpawnInfos { get; protected set; } Property Value Type Description IReadOnlyCollection < ISoldierSpawnInfo > Methods GameOverAI() 游戏结束时的AI Declaration public virtual void GameOverAI() GameStartAI() 游戏开始时的AI Declaration public virtual void GameStartAI() GamingAI() 游戏中的AI 每帧调用 Declaration public virtual void GamingAI() GetCanSpawnSoldierInfos() 获取可生成的士兵的信息 Declaration public ISoldierSpawnInfo[] GetCanSpawnSoldierInfos() Returns Type Description ISoldierSpawnInfo [] 可生成的士兵的信息 GetDamage(Single, IAttack, out Single) 接受伤害 Declaration public bool GetDamage(float attack, IAttack attacker, out float destroyExperience) Parameters Type Name Description System.Single attack 攻击值 IAttack attacker 攻击者 System.Single destroyExperience 摧毁经验 Returns Type Description System.Boolean 是否被摧毁 IntiBase(String, ISoldierSpawnInfo[], PlayerController) 初始化基地 Declaration public void IntiBase(string baseCampName, ISoldierSpawnInfo[] soldierSpawnInfos, PlayerController playerController) Parameters Type Name Description System.String baseCampName 基地阵营名称 ISoldierSpawnInfo [] soldierSpawnInfos 士兵生成信息 PlayerController playerController 玩家 OnBaseDestroyed() 基地被破坏时调用 Declaration protected virtual void OnBaseDestroyed() RefreshSoldierInfos(ResourcesWarehouse) 刷新士兵生成信息 Declaration public void RefreshSoldierInfos(ResourcesWarehouse resourcesWarehouse) Parameters Type Name Description ResourcesWarehouse resourcesWarehouse 仓库 RequestStrikePosition(out OperationalBase) 请求打击的基地 Declaration public bool RequestStrikePosition(out OperationalBase attackingBase) Parameters Type Name Description OperationalBase attackingBase 基地 Returns Type Description System.Boolean 是否获取成功 Implements IAttack"
  },
  "api/GameInterface.PlayerController.html": {
    "href": "api/GameInterface.PlayerController.html",
    "title": "Class PlayerController | 游戏文档",
    "keywords": "Class PlayerController 玩家控制器，储存了玩家信息，基地，资源 Inheritance System.Object PlayerController Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class PlayerController : MonoBehaviour Fields resourcesWarehouse 资源仓库 Declaration public ResourcesWarehouse resourcesWarehouse Field Value Type Description ResourcesWarehouse Properties BaseGroup 玩家拥有的基地组 Declaration public IReadOnlyList<OperationalBase> BaseGroup { get; } Property Value Type Description IReadOnlyList < OperationalBase > IsLose 是否失败 Declaration public bool IsLose { get; set; } Property Value Type Description System.Boolean PlayerInfo 玩家索引 Declaration public PlayerInfo PlayerInfo { get; } Property Value Type Description PlayerInfo Methods AddBase(OperationalBase) 添加基地 Declaration public void AddBase(OperationalBase operationalBase) Parameters Type Name Description OperationalBase operationalBase 添加的基地 Init(PlayerInfo, CollectableResourcesData[]) 初始化 Declaration public void Init(PlayerInfo playerInfo, CollectableResourcesData[] collectableResourcesDatas) Parameters Type Name Description PlayerInfo playerInfo 玩家信息 CollectableResourcesData [] collectableResourcesDatas 可采集资源数据 RefreshBasesSoldierInfo() 刷新所有基地的士兵生成信息 Declaration public void RefreshBasesSoldierInfo() RemoveBase(OperationalBase) 移除基地 Declaration public void RemoveBase(OperationalBase operationalBase) Parameters Type Name Description OperationalBase operationalBase 移除的基地"
  },
  "api/GameInterface.PlayerInfo.html": {
    "href": "api/GameInterface.PlayerInfo.html",
    "title": "Struct PlayerInfo | 游戏文档",
    "keywords": "Struct PlayerInfo 玩家信息 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct PlayerInfo Fields isAI 是否是AI Declaration public bool isAI Field Value Type Description System.Boolean playerIndex 玩家编号 Declaration public int playerIndex Field Value Type Description System.Int32"
  },
  "api/GameInterface.ResourcesWarehouse.html": {
    "href": "api/GameInterface.ResourcesWarehouse.html",
    "title": "Class ResourcesWarehouse | 游戏文档",
    "keywords": "Class ResourcesWarehouse 玩家的仓库 Inheritance System.Object ResourcesWarehouse Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class ResourcesWarehouse Constructors ResourcesWarehouse(CollectableResourcesData[]) 生成仓库 Declaration public ResourcesWarehouse(CollectableResourcesData[] collectableResourcesDatas) Parameters Type Name Description CollectableResourcesData [] collectableResourcesDatas 可采集资源数据 Fields resourcesWarehouseItem 所有仓库项目 Declaration public ResourcesWarehouseItem[] resourcesWarehouseItem Field Value Type Description ResourcesWarehouseItem [] Properties ChangeAction 改变资源事件 \"改变的仓库\" Declaration public Action<ResourcesWarehouse> ChangeAction { get; set; } Property Value Type Description Action < ResourcesWarehouse > Methods AddResources(String, Single) 添加资源 Declaration public bool AddResources(string resourcesName, float addNumber) Parameters Type Name Description System.String resourcesName 资源名称 System.Single addNumber 添加数量 Returns Type Description System.Boolean 是否添加成功 GetResourcesNumber(String, out Single) 获取资源数量 Declaration public bool GetResourcesNumber(string resourcesName, out float number) Parameters Type Name Description System.String resourcesName 资源名称 System.Single number 资源数量 Returns Type Description System.Boolean 是否获取成功 ReduceResources(String, Single) 减少资源 Declaration public bool ReduceResources(string resourcesName, float reduceNumber) Parameters Type Name Description System.String resourcesName 资源名称 System.Single reduceNumber 减少数量 Returns Type Description System.Boolean 是否减少成功"
  },
  "api/GameInterface.ResourcesWarehouseItem.html": {
    "href": "api/GameInterface.ResourcesWarehouseItem.html",
    "title": "Class ResourcesWarehouseItem | 游戏文档",
    "keywords": "Class ResourcesWarehouseItem 仓库储存项目 Inheritance System.Object ResourcesWarehouseItem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class ResourcesWarehouseItem Constructors ResourcesWarehouseItem(String, Single, Sprite) Declaration public ResourcesWarehouseItem(string name, float num, Sprite image) Parameters Type Name Description System.String name 资源名称 System.Single num 资源数量 Sprite image 资源图片 Fields resourcesImage 资源图片 Declaration public Sprite resourcesImage Field Value Type Description Sprite resourcesName 资源名称 Declaration public string resourcesName Field Value Type Description System.String resourcesNumber 资源数量 Declaration public float resourcesNumber Field Value Type Description System.Single"
  },
  "api/GameInterface.Singleton-1.html": {
    "href": "api/GameInterface.Singleton-1.html",
    "title": "Class Singleton<T> | 游戏文档",
    "keywords": "Class Singleton<T> 单例模式基类 Inheritance System.Object Singleton<T> SceneLoader GameManager ModLoader UIManager SteamWorkshop ObjectPoolManager Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class Singleton<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T Properties Instance 单例 Declaration public static T Instance { get; set; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake()"
  },
  "api/GameInterface.Soldier.html": {
    "href": "api/GameInterface.Soldier.html",
    "title": "Class Soldier | 游戏文档",
    "keywords": "Class Soldier 士兵脚本，储存士兵数据，士兵AI Inheritance System.Object Soldier Implements IAttack Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public class Soldier : MonoBehaviour, IAttack Fields attack 攻击值 Declaration protected float attack Field Value Type Description System.Single attackCDCount 攻击冷却计时 Declaration protected float attackCDCount Field Value Type Description System.Single attackTarget 敌军目标(地址引用) Declaration protected List<IAttack> attackTarget Field Value Type Description List < IAttack > attribute 士兵属性 Declaration public SoldierAttribute attribute Field Value Type Description SoldierAttribute circleCollider2D 范围碰撞器 Declaration public CircleCollider2D circleCollider2D Field Value Type Description CircleCollider2D dir 方向 Declaration protected int dir Field Value Type Description System.Int32 experience 经验(默认为0) Declaration protected float experience Field Value Type Description System.Single level 士兵等级 Declaration protected int level Field Value Type Description System.Int32 levelUpExp 升级所需经验 Declaration protected float levelUpExp Field Value Type Description System.Single maxHP 最大血量 Declaration protected float maxHP Field Value Type Description System.Single moveTarget 移动路径点 Declaration protected List<Transform> moveTarget Field Value Type Description List < Transform > soldierInfoPoint 士兵信息显示位置 Declaration public Transform soldierInfoPoint Field Value Type Description Transform soldierState Declaration protected SoldierState soldierState Field Value Type Description SoldierState spriteRenderer 渲染器 Declaration public SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer Properties Base 所属基地 Declaration public OperationalBase Base { get; } Property Value Type Description OperationalBase CurrentHP 当前血量 Declaration public float CurrentHP { get; protected set; } Property Value Type Description System.Single GameObject 游戏物体 Declaration public GameObject GameObject { get; } Property Value Type Description GameObject PlayerIndex 所属玩家索引 Declaration public int PlayerIndex { get; } Property Value Type Description System.Int32 SoldierState 士兵状态 Declaration public SoldierState SoldierState { get; } Property Value Type Description SoldierState Methods Attack(IAttack) 攻击逻辑 Declaration protected virtual float Attack(IAttack attackSoldier) Parameters Type Name Description IAttack attackSoldier 被攻击的士兵 Returns Type Description System.Single 攻击的数值 DestorySolider() 摧毁士兵 Declaration protected void DestorySolider() GetDamage(Single, IAttack, out Single) 接受伤害 Declaration public bool GetDamage(float attack, IAttack attacker, out float destroyExperience) Parameters Type Name Description System.Single attack 攻击值 IAttack attacker 攻击者 System.Single destroyExperience 摧毁经验 Returns Type Description System.Boolean 是否被摧毁 GetExp(Single) 获得经验 Declaration public void GetExp(float addExp) Parameters Type Name Description System.Single addExp 增加的经验 Init(OperationalBase) 士兵初始化 Declaration public void Init(OperationalBase operationalBase) Parameters Type Name Description OperationalBase operationalBase 士兵的基地 LevelUp() 等级提升(回复一半的血量,提升数值) Declaration public virtual void LevelUp() Move() 移动逻辑 Declaration protected virtual void Move() OnSoldierAttack() 士兵Attack状态时每帧调用 Declaration protected virtual void OnSoldierAttack() OnSoldierDie() 士兵Die状态时每帧调用 Declaration protected virtual void OnSoldierDie() OnSoldierIdle() 士兵Idle状态时每帧调用 Declaration protected virtual void OnSoldierIdle() OnSoldierMove() 士兵Move状态时每帧调用 Declaration protected virtual void OnSoldierMove() OnSoldierMoveAttack() 士兵MoveAttack状态时每帧调用 Declaration protected virtual void OnSoldierMoveAttack() Implements IAttack"
  },
  "api/GameInterface.SoldierAttribute.html": {
    "href": "api/GameInterface.SoldierAttribute.html",
    "title": "Struct SoldierAttribute | 游戏文档",
    "keywords": "Struct SoldierAttribute 士兵属性 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct SoldierAttribute Fields antiAir 是否允许防空 Declaration public bool antiAir Field Value Type Description System.Boolean attack 攻击值 Declaration public float attack Field Value Type Description System.Single attackRadius 攻击半径 Declaration public float attackRadius Field Value Type Description System.Single attackRate 攻击速度 Declaration public float attackRate Field Value Type Description System.Single canFly 是否允许飞行 Declaration public bool canFly Field Value Type Description System.Boolean deathExperience 死亡产生的经验 Declaration public float deathExperience Field Value Type Description System.Single defend 防御值 Declaration public float defend Field Value Type Description System.Single defendSpe 特殊防御 Declaration public float defendSpe Field Value Type Description System.Single description 士兵描述 Declaration public string description Field Value Type Description System.String levelUpExp 升级所需经验 Declaration public float levelUpExp Field Value Type Description System.Single maxHP 最大血量 Declaration public float maxHP Field Value Type Description System.Single moveSpeed 移动速度 Declaration public float moveSpeed Field Value Type Description System.Single soldierName 士兵名称 Declaration public string soldierName Field Value Type Description System.String soldierType 士兵类型 Declaration public soldierType soldierType Field Value Type Description soldierType"
  },
  "api/GameInterface.SoldierCost.html": {
    "href": "api/GameInterface.SoldierCost.html",
    "title": "Struct SoldierCost | 游戏文档",
    "keywords": "Struct SoldierCost 生成士兵资源花费 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct SoldierCost Fields costNumber 花费可采集资源数量 Declaration public float costNumber Field Value Type Description System.Single costResourcesName 花费可采集资源名称 Declaration public string costResourcesName Field Value Type Description System.String"
  },
  "api/GameInterface.SoldierData.html": {
    "href": "api/GameInterface.SoldierData.html",
    "title": "Struct SoldierData | 游戏文档",
    "keywords": "Struct SoldierData 士兵数据 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public struct SoldierData Fields baseLevel 所需基地等级 Declaration public int baseLevel Field Value Type Description System.Int32 costs 士兵花费 Declaration public SoldierCost[] costs Field Value Type Description SoldierCost [] gameAssetData 资产数据 Declaration public GameAssetData gameAssetData Field Value Type Description GameAssetData soldierImage 士兵图片 Declaration public Sprite soldierImage Field Value Type Description Sprite soldierName 士兵图片 Declaration public string soldierName Field Value Type Description System.String soldierPrefab 士兵预制体 Declaration public GameObject soldierPrefab Field Value Type Description GameObject spawnCD 生成冷却时间 Declaration public float spawnCD Field Value Type Description System.Single"
  },
  "api/GameInterface.SoldierState.html": {
    "href": "api/GameInterface.SoldierState.html",
    "title": "Enum SoldierState | 游戏文档",
    "keywords": "Enum SoldierState 士兵状态 Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public enum SoldierState Fields Name Description Attack 攻击 Die 死亡 Idle 待机 Move 移动 MoveAttack 攻击并移动"
  },
  "api/GameInterface.soldierType.html": {
    "href": "api/GameInterface.soldierType.html",
    "title": "Enum soldierType | 游戏文档",
    "keywords": "Enum soldierType 士兵类型 Namespace : GameInterface Assembly : cs.temp.dll.dll Syntax public enum soldierType Fields Name Description GroundWarrior 地面士兵 lowerAirWarrior 低空士兵 UpperAirWarrior 高空士兵 Worker 工兵"
  },
  "api/GameMod.html": {
    "href": "api/GameMod.html",
    "title": "Namespace GameMod | 游戏文档",
    "keywords": "Namespace GameMod Classes ModAssetManager 游戏mod数据管理器 ModCommunication Mod通信 ModLoader 模组加载器 Structs ModItem 模组条目"
  },
  "api/GameMod.ModAssetManager.html": {
    "href": "api/GameMod.ModAssetManager.html",
    "title": "Class ModAssetManager | 游戏文档",
    "keywords": "Class ModAssetManager 游戏mod数据管理器 Inheritance System.Object ModAssetManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameMod Assembly : cs.temp.dll.dll Syntax public static class ModAssetManager Fields gameConfigDataPath 游戏资产配置文件路径 Declaration public const string gameConfigDataPath = \"GameData/GameConfig\" Field Value Type Description System.String Properties GameConfigs 游戏资产配置文件 Declaration public static GameAssetConfig[] GameConfigs { get; } Property Value Type Description GameAssetConfig [] LocalModDirectory mod文件路径 Declaration public static ModDirectory LocalModDirectory { get; } Property Value Type Description ModDirectory Methods GetAllCamp() 获取所有阵营 Declaration public static CampData[] GetAllCamp() Returns Type Description CampData [] 所有阵营数据 GetAllCollectableResourcesData() 获取所有可采集资源 Declaration public static CollectableResourcesData[] GetAllCollectableResourcesData() Returns Type Description CollectableResourcesData [] 所有可采集资源数据 GetAllGameConfig() 获取所有游戏资产配置文件 Declaration public static GameAssetConfig[] GetAllGameConfig() Returns Type Description GameAssetConfig [] 所有游戏资产配置文件 GetAllGameMode() 获取所有游戏模式 Declaration public static GameModeData[] GetAllGameMode() Returns Type Description GameModeData [] 所有游戏模式数据 GetAllMap() 获取所有地图 Declaration public static MapData[] GetAllMap() Returns Type Description MapData [] 所有地图数据 GetGameConfig() 获取本体游戏资产配置文件 Declaration public static GameAssetConfig GetGameConfig() Returns Type Description GameAssetConfig 游戏资产配置文件 GetModGameConfig(ModHost) 获取Mod游戏资产配置文件 Declaration public static GameAssetConfig GetModGameConfig(ModHost modHost) Parameters Type Name Description ModHost modHost Mod主机 Returns Type Description GameAssetConfig 游戏资产配置文件 GetModScene(String, String) 获取Mod场景文件 Declaration public static IModScene GetModScene(string modName, string sceneName) Parameters Type Name Description System.String modName mod名称 System.String sceneName 场景名称 Returns Type Description IModScene Mod场景 GetSoldierDatas(String) 获取指定阵营的可用士兵 Declaration public static SoldierData[] GetSoldierDatas(string campName) Parameters Type Name Description System.String campName 阵营名称 Returns Type Description SoldierData [] 可用士兵数据 InstantiateModPrefab(GameAssetData, String) 实例化Mod资产预制体 Declaration public static GameObject InstantiateModPrefab(GameAssetData gameAssetData, string prefabName) Parameters Type Name Description GameAssetData gameAssetData 游戏资产数据 System.String prefabName 预制体名称 Returns Type Description GameObject 实例化物体 InstantiatePrefab(GameAssetData, GameObject) 实例化资产预制体 Declaration public static GameObject InstantiatePrefab(GameAssetData gameAssetData, GameObject prefab) Parameters Type Name Description GameAssetData gameAssetData 游戏资产数据 GameObject prefab 预制体 Returns Type Description GameObject 实例化物体 RefreshAllGameConfig() 刷新游戏资产配置文件 Declaration public static void RefreshAllGameConfig() SetModActive(ModItem, Boolean) 设置Mod是否启用 Declaration public static IEnumerator SetModActive(ModItem modItem, bool active) Parameters Type Name Description ModItem modItem mod信息 System.Boolean active 是否启用 Returns Type Description IEnumerator"
  },
  "api/GameMod.ModCommunication.html": {
    "href": "api/GameMod.ModCommunication.html",
    "title": "Class ModCommunication | 游戏文档",
    "keywords": "Class ModCommunication Mod通信 Inheritance System.Object ModCommunication Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameMod Assembly : cs.temp.dll.dll Syntax public static class ModCommunication Methods InitModManagers(GameManager) 初始化mod管理器 Declaration public static void InitModManagers(GameManager gameManagerInstance) Parameters Type Name Description GameManager gameManagerInstance 游戏管理器接口实例"
  },
  "api/GameMod.ModItem.html": {
    "href": "api/GameMod.ModItem.html",
    "title": "Struct ModItem | 游戏文档",
    "keywords": "Struct ModItem 模组条目 Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : GameMod Assembly : cs.temp.dll.dll Syntax public struct ModItem Constructors ModItem(IModInfo, Boolean, Boolean, String, UInt64) Declaration public ModItem(IModInfo modInfo, bool active, bool isSteamMod, string modContentPath = null, ulong publishedFileId = 0UL) Parameters Type Name Description IModInfo modInfo System.Boolean active System.Boolean isSteamMod System.String modContentPath System.UInt64 publishedFileId Fields active 是否开启 Declaration public bool active Field Value Type Description System.Boolean isSteamMod 是否是Steam模组 Declaration public bool isSteamMod Field Value Type Description System.Boolean modContentPath 模组内容路径 Declaration public string modContentPath Field Value Type Description System.String modInfo 模组信息 Declaration public IModInfo modInfo Field Value Type Description IModInfo publishedFileId steam物品Id Declaration public ulong publishedFileId Field Value Type Description System.UInt64"
  },
  "api/GameMod.ModLoader.html": {
    "href": "api/GameMod.ModLoader.html",
    "title": "Class ModLoader | 游戏文档",
    "keywords": "Class ModLoader 模组加载器 Inheritance System.Object Singleton < ModLoader > ModLoader Inherited Members Singleton<ModLoader>.Instance Namespace : GameMod Assembly : cs.temp.dll.dll Syntax public class ModLoader : Singleton<ModLoader> Properties ModPanel 模组面板 Declaration public ModPanel ModPanel { get; set; } Property Value Type Description ModPanel Methods Awake() Declaration protected override void Awake() Overrides GameInterface.Singleton<GameMod.ModLoader>.Awake() RefreshModData() 刷新模组数据 Declaration public void RefreshModData()"
  },
  "api/GameUI.BasePanel.html": {
    "href": "api/GameUI.BasePanel.html",
    "title": "Class BasePanel | 游戏文档",
    "keywords": "Class BasePanel 基地面板 Inheritance System.Object BasePanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class BasePanel : MonoBehaviour Methods GetRayHit(OperationalBase) 获取射线检测内容 Declaration public void GetRayHit(OperationalBase operationalBase) Parameters Type Name Description OperationalBase operationalBase 射线击中的基地 ShowSpawnPanel() 显示生成面板（UI调用） Declaration public void ShowSpawnPanel()"
  },
  "api/GameUI.CollectableResourcesItem.html": {
    "href": "api/GameUI.CollectableResourcesItem.html",
    "title": "Class CollectableResourcesItem | 游戏文档",
    "keywords": "Class CollectableResourcesItem 可采集资源列表项目 Inheritance System.Object CollectableResourcesItem Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class CollectableResourcesItem : MonoBehaviour Methods SetInfo(String, Single, Sprite) 设置资源信息 Declaration public void SetInfo(string name, float number, Sprite image) Parameters Type Name Description System.String name 资源名称 System.Single number 资源数量 Sprite image 资源图标"
  },
  "api/GameUI.CollectableResourcesPanel.html": {
    "href": "api/GameUI.CollectableResourcesPanel.html",
    "title": "Class CollectableResourcesPanel | 游戏文档",
    "keywords": "Class CollectableResourcesPanel 可采集资源面板 Inheritance System.Object CollectableResourcesPanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class CollectableResourcesPanel : MonoBehaviour Methods RefreshPanel(ResourcesWarehouseItem[]) 刷新面板 Declaration public void RefreshPanel(ResourcesWarehouseItem[] warehouseItems) Parameters Type Name Description ResourcesWarehouseItem [] warehouseItems 仓库资源数据"
  },
  "api/GameUI.EnemyInfo.html": {
    "href": "api/GameUI.EnemyInfo.html",
    "title": "Class EnemyInfo | 游戏文档",
    "keywords": "Class EnemyInfo 显示敌方士兵信息并跟随士兵移动，显示攻击和防御 Inheritance System.Object EnemyInfo Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class EnemyInfo : MonoBehaviour Methods HideInfo() 隐藏信息框 Declaration public void HideInfo() ShowInfo(Soldier) 显示信息框 Declaration public void ShowInfo(Soldier soldier) Parameters Type Name Description Soldier soldier 士兵"
  },
  "api/GameUI.GameOverPanel.html": {
    "href": "api/GameUI.GameOverPanel.html",
    "title": "Class GameOverPanel | 游戏文档",
    "keywords": "Class GameOverPanel 游戏结束面板 Inheritance System.Object GameOverPanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class GameOverPanel : MonoBehaviour Methods Show() 显示面板 Declaration public void Show()"
  },
  "api/GameUI.html": {
    "href": "api/GameUI.html",
    "title": "Namespace GameUI | 游戏文档",
    "keywords": "Namespace GameUI Classes BasePanel 基地面板 CollectableResourcesItem 可采集资源列表项目 CollectableResourcesPanel 可采集资源面板 EnemyInfo 显示敌方士兵信息并跟随士兵移动，显示攻击和防御 GameOverPanel 游戏结束面板 MainMenu 主菜单UI，控制UI界面动画，打开网页链接，退出游戏 MessageTipObject 右下角弹出提示的物体 由MessageTips控制，控制信息和倒计时 MessageTips 在游戏右下角生成信息提示，可以用在事件提示，单位死亡提示等等，还支持倒计时 MiniMap 游戏小地图，目前是使用额外的摄像机，可以控制大小宽度透明度 ModListItem 模组列表物品UI ModPanel 模组面板 MouseOverMessageBox 鼠标悬停信息框 MouseOverMessageBoxesSystem 鼠标悬停信息框系统 MouseOverMessageBoxTrigger 鼠标悬停提示触发器 SelectHorizontalScroll 无限水平滚动列表，根据鼠标拖动和鼠标选择控制水平滚动，并根据当前居中的选项显示详细信息 SelectHorizontalScrollItem 无限水平滚动列表选项，由SelectHorizontalScroll控制，获取鼠标点击 SelectPathUI 选择文件路径UI SkillButton 技能按钮 SkillPanel 技能面板 SoldierInfoUI 根据鼠标射线获取点击的士兵，并根据士兵阵营调用显示士兵信息的脚本 SpawnSoldierButton 生成士兵按钮 UIManager UI管理器 单例模式，在此保存了其他UI脚本的引用，游戏内使用UI从这里调用 UIStaticMethods UI静态方法 UploadModPanel 上传模组面板"
  },
  "api/GameUI.MainMenu.html": {
    "href": "api/GameUI.MainMenu.html",
    "title": "Class MainMenu | 游戏文档",
    "keywords": "Class MainMenu 主菜单UI，控制UI界面动画，打开网页链接，退出游戏 Inheritance System.Object MainMenu Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MainMenu : MonoBehaviour Methods ExitGame() 退出游戏（按钮调用） Declaration public void ExitGame() OpenURL(String) 打开链接（按钮调用） Declaration public void OpenURL(string url) Parameters Type Name Description System.String url SelectCampPanel(Boolean) 切换选择阵营面板（按钮调用） Declaration public void SelectCampPanel(bool isPlayer) Parameters Type Name Description System.Boolean isPlayer SelectGameModePanel() 切换选择游戏模式面板（按钮调用） Declaration public void SelectGameModePanel() SelectGameTypePanel() 切换选择游戏类型面板（按钮调用） Declaration public void SelectGameTypePanel() SelectMapPanel() 切换选择地图面板（按钮调用） Declaration public void SelectMapPanel() StartPanel() 切换开始面板（按钮调用） Declaration public void StartPanel()"
  },
  "api/GameUI.MessageTipObject.html": {
    "href": "api/GameUI.MessageTipObject.html",
    "title": "Class MessageTipObject | 游戏文档",
    "keywords": "Class MessageTipObject 右下角弹出提示的物体 由MessageTips控制，控制信息和倒计时 Inheritance System.Object MessageTipObject Implements IPointerClickHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MessageTipObject : MonoBehaviour Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData SetInfo(String, Sprite, String, Single, MessageTips) 设置信息参数 Declaration public void SetInfo(string title, Sprite sprite, string details, float countdownTime, MessageTips messageTips) Parameters Type Name Description System.String title 标题 Sprite sprite 图片 System.String details 详细信息 System.Single countdownTime 倒计时 MessageTips messageTips Implements IPointerClickHandler"
  },
  "api/GameUI.MessageTips.html": {
    "href": "api/GameUI.MessageTips.html",
    "title": "Class MessageTips | 游戏文档",
    "keywords": "Class MessageTips 在游戏右下角生成信息提示，可以用在事件提示，单位死亡提示等等，还支持倒计时 Inheritance System.Object MessageTips Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MessageTips : MonoBehaviour Methods CreateMessageTip(String, Sprite, String, Single) 创建信息提示 Declaration public void CreateMessageTip(string title, Sprite sprite, string details = null, float countdownTime = 0F) Parameters Type Name Description System.String title 标题 Sprite sprite 图标 System.String details 详细信息 System.Single countdownTime 倒计时 RemoveTip(MessageTipObject) 删除指定提示 Declaration public void RemoveTip(MessageTipObject tipObject) Parameters Type Name Description MessageTipObject tipObject 指定提示"
  },
  "api/GameUI.MiniMap.html": {
    "href": "api/GameUI.MiniMap.html",
    "title": "Class MiniMap | 游戏文档",
    "keywords": "Class MiniMap 游戏小地图，目前是使用额外的摄像机，可以控制大小宽度透明度 Inheritance System.Object MiniMap Implements IPointerDownHandler IDragHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MiniMap : MonoBehaviour Methods OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData RefreshMiniMap() 刷新小地图 Declaration public void RefreshMiniMap() SetRange(Vector2, Vector2) 设置小地图范围 Declaration public void SetRange(Vector2 maxXY, Vector2 minXY) Parameters Type Name Description Vector2 maxXY 最大XY Vector2 minXY 最小XY Implements IPointerDownHandler IDragHandler"
  },
  "api/GameUI.ModListItem.html": {
    "href": "api/GameUI.ModListItem.html",
    "title": "Class ModListItem | 游戏文档",
    "keywords": "Class ModListItem 模组列表物品UI Inheritance System.Object ModListItem Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class ModListItem : MonoBehaviour Properties IsLoad 是否已加载模组 Declaration public bool IsLoad { get; set; } Property Value Type Description System.Boolean ToggleModAction 开关按钮事件 \"模组,开关\" Declaration public Action<ModItem, bool> ToggleModAction { get; set; } Property Value Type Description Action < ModItem , System.Boolean > Methods UpdateFromModInfo(ModItem) 加载模组信息 Declaration public void UpdateFromModInfo(ModItem modItem) Parameters Type Name Description ModItem modItem 模组"
  },
  "api/GameUI.ModPanel.html": {
    "href": "api/GameUI.ModPanel.html",
    "title": "Class ModPanel | 游戏文档",
    "keywords": "Class ModPanel 模组面板 Inheritance System.Object ModPanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class ModPanel : MonoBehaviour Properties LocalMods 本地模组信息 Declaration public ModItem[] LocalMods { get; set; } Property Value Type Description ModItem [] SteamMods steam模组信息 Declaration public ModItem[] SteamMods { get; set; } Property Value Type Description ModItem [] ToggleModAction 开关按钮事件 \"模组,开关\" Declaration public Action<ModItem, bool> ToggleModAction { get; set; } Property Value Type Description Action < ModItem , System.Boolean > Methods Refresh() 刷新模组列表 Declaration public void Refresh() ShowLocalMod() 显示本地模组（UI调用） Declaration public void ShowLocalMod() ShowSteamMod() 显示steam模组（UI调用） Declaration public void ShowSteamMod()"
  },
  "api/GameUI.MouseOverMessageBox.html": {
    "href": "api/GameUI.MouseOverMessageBox.html",
    "title": "Class MouseOverMessageBox | 游戏文档",
    "keywords": "Class MouseOverMessageBox 鼠标悬停信息框 Inheritance System.Object MouseOverMessageBox Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MouseOverMessageBox : MonoBehaviour Fields content Declaration public Text content Field Value Type Description Text header Declaration public Text header Field Value Type Description Text Methods SetPosition() 设置位置跟随鼠标 Declaration public void SetPosition() SetTexts(String, String) 设置信息框文字内容 并限制信息框宽度 Declaration public void SetTexts(string headerText, string contentText) Parameters Type Name Description System.String headerText 标题文字 System.String contentText 内容文字"
  },
  "api/GameUI.MouseOverMessageBoxesSystem.html": {
    "href": "api/GameUI.MouseOverMessageBoxesSystem.html",
    "title": "Class MouseOverMessageBoxesSystem | 游戏文档",
    "keywords": "Class MouseOverMessageBoxesSystem 鼠标悬停信息框系统 Inheritance System.Object MouseOverMessageBoxesSystem Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MouseOverMessageBoxesSystem : MonoBehaviour Fields waitTime Declaration public float waitTime Field Value Type Description System.Single Methods HideMessageBox(MouseOverMessageBox) 隐藏信息框 Declaration public void HideMessageBox(MouseOverMessageBox messageBox) Parameters Type Name Description MouseOverMessageBox messageBox 要隐藏的信息框 ShowMessageBox(String, String) 显示信息框 Declaration public MouseOverMessageBox ShowMessageBox(string header, string content) Parameters Type Name Description System.String header 标题文本 System.String content 内容文本 Returns Type Description MouseOverMessageBox 生成的信息框"
  },
  "api/GameUI.MouseOverMessageBoxTrigger.html": {
    "href": "api/GameUI.MouseOverMessageBoxTrigger.html",
    "title": "Class MouseOverMessageBoxTrigger | 游戏文档",
    "keywords": "Class MouseOverMessageBoxTrigger 鼠标悬停提示触发器 Inheritance System.Object MouseOverMessageBoxTrigger Implements IPointerEnterHandler IPointerExitHandler IPointerDownHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class MouseOverMessageBoxTrigger : MonoBehaviour Methods OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData SetTexts(String) 设置文字 Declaration public void SetTexts(string header) Parameters Type Name Description System.String header 标题 SetTexts(String, String) 设置文字 Declaration public void SetTexts(string header, string content) Parameters Type Name Description System.String header 标题 System.String content 内容 Implements IPointerEnterHandler IPointerExitHandler IPointerDownHandler"
  },
  "api/GameUI.SelectHorizontalScroll.html": {
    "href": "api/GameUI.SelectHorizontalScroll.html",
    "title": "Class SelectHorizontalScroll | 游戏文档",
    "keywords": "Class SelectHorizontalScroll 无限水平滚动列表，根据鼠标拖动和鼠标选择控制水平滚动，并根据当前居中的选项显示详细信息 Inheritance System.Object SelectHorizontalScroll Implements IDragHandler IPointerDownHandler IPointerUpHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SelectHorizontalScroll : MonoBehaviour Properties SelectAction 选择的事件 \"选择的编号\" Declaration public Action<int> SelectAction { get; set; } Property Value Type Description Action < System.Int32 > Methods OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerUp(PointerEventData) Declaration public void OnPointerUp(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Select(Int32, Int32, RectTransform) 点击选择 Declaration public void Select(int itemIndex, int infoIndex, RectTransform itemRectTransform) Parameters Type Name Description System.Int32 itemIndex 点击的选项索引 System.Int32 infoIndex 点击的选择信息索引 RectTransform itemRectTransform 选项的变换 SetItemsInfo(String[], Sprite[], String[]) 设置选项信息 Declaration public void SetItemsInfo(string[] names, Sprite[] sprites, string[] descriptions) Parameters Type Name Description System.String [] names 选项名称 Sprite [] sprites 选项图片 System.String [] descriptions 选项描述 Implements IDragHandler IPointerDownHandler IPointerUpHandler"
  },
  "api/GameUI.SelectHorizontalScrollItem.html": {
    "href": "api/GameUI.SelectHorizontalScrollItem.html",
    "title": "Class SelectHorizontalScrollItem | 游戏文档",
    "keywords": "Class SelectHorizontalScrollItem 无限水平滚动列表选项，由SelectHorizontalScroll控制，获取鼠标点击 Inheritance System.Object SelectHorizontalScrollItem Implements IDragHandler IPointerDownHandler IPointerUpHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SelectHorizontalScrollItem : MonoBehaviour Fields description Declaration public string description Field Value Type Description System.String infoIndex Declaration public int infoIndex Field Value Type Description System.Int32 itemIndex Declaration public int itemIndex Field Value Type Description System.Int32 rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform Methods OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerUp(PointerEventData) Declaration public void OnPointerUp(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData SetAlpha(Single) 设置透明度 Declaration public void SetAlpha(float alpha) Parameters Type Name Description System.Single alpha SetInfo(Sprite, String, String, Int32, SelectHorizontalScroll) 设置信息 Declaration public void SetInfo(Sprite sprite, string name, string description, int infoIndex, SelectHorizontalScroll selectHorizontalScroll) Parameters Type Name Description Sprite sprite 图片 System.String name 名称 System.String description 描述 System.Int32 infoIndex 信息索引 SelectHorizontalScroll selectHorizontalScroll 无限水平滚动选择列表脚本 Implements IDragHandler IPointerDownHandler IPointerUpHandler"
  },
  "api/GameUI.SelectPathUI.html": {
    "href": "api/GameUI.SelectPathUI.html",
    "title": "Class SelectPathUI | 游戏文档",
    "keywords": "Class SelectPathUI 选择文件路径UI Inheritance System.Object SelectPathUI Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SelectPathUI : MonoBehaviour Fields errorText Declaration public Text errorText Field Value Type Description Text filterExtension Declaration public string filterExtension Field Value Type Description System.String filterName Declaration public string filterName Field Value Type Description System.String intialDir Declaration public string intialDir Field Value Type Description System.String isSelectFolder Declaration public bool isSelectFolder Field Value Type Description System.Boolean Properties SelectAction 选择路径事件 \"路径是否错误,路径\" Declaration public Action<bool, string> SelectAction { get; set; } Property Value Type Description Action < System.Boolean , System.String >"
  },
  "api/GameUI.SkillButton.html": {
    "href": "api/GameUI.SkillButton.html",
    "title": "Class SkillButton | 游戏文档",
    "keywords": "Class SkillButton 技能按钮 Inheritance System.Object SkillButton Implements IPointerClickHandler IPointerEnterHandler IPointerExitHandler Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SkillButton : MonoBehaviour Fields skillName Declaration public string skillName Field Value Type Description System.String Methods DestroyButton() 删除按钮 Declaration public void DestroyButton() DisableButton() 禁用按钮 Declaration public void DisableButton() EnableButton() 启用按钮 Declaration public void EnableButton() OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData SetInfo(String, Sprite, String, Single, Action) 设置参数 Declaration public void SetInfo(string name, Sprite sprite, string description, float CD, Action skillAction) Parameters Type Name Description System.String name 技能名称 Sprite sprite 图片 System.String description 描述 System.Single CD CD时间 Action skillAction 技能 Implements IPointerClickHandler IPointerEnterHandler IPointerExitHandler"
  },
  "api/GameUI.SkillPanel.html": {
    "href": "api/GameUI.SkillPanel.html",
    "title": "Class SkillPanel | 游戏文档",
    "keywords": "Class SkillPanel 技能面板 Inheritance System.Object SkillPanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SkillPanel : MonoBehaviour Methods CreateSkillButton(String, Sprite, String, Single, Action) 创建技能按钮 Declaration public SkillButton CreateSkillButton(string name, Sprite sprite, string description, float CD, Action skillAction) Parameters Type Name Description System.String name 技能名称 Sprite sprite 图片 System.String description 描述 System.Single CD CD时间 Action skillAction 技能 Returns Type Description SkillButton 技能按钮 DestroySkillButton(String) 删除技能按钮 Declaration public void DestroySkillButton(string name) Parameters Type Name Description System.String name DisableSkillButton(String) 禁用技能按钮 Declaration public void DisableSkillButton(string name) Parameters Type Name Description System.String name EnableSkillButton(String) 启用技能按钮 Declaration public void EnableSkillButton(string name) Parameters Type Name Description System.String name"
  },
  "api/GameUI.SoldierInfoUI.html": {
    "href": "api/GameUI.SoldierInfoUI.html",
    "title": "Class SoldierInfoUI | 游戏文档",
    "keywords": "Class SoldierInfoUI 根据鼠标射线获取点击的士兵，并根据士兵阵营调用显示士兵信息的脚本 Inheritance System.Object SoldierInfoUI Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SoldierInfoUI : MonoBehaviour Methods GetRayHit(Soldier) 获取射线检测内容 Declaration public void GetRayHit(Soldier soldier) Parameters Type Name Description Soldier soldier 射线击中的士兵"
  },
  "api/GameUI.SpawnSoldierButton.html": {
    "href": "api/GameUI.SpawnSoldierButton.html",
    "title": "Class SpawnSoldierButton | 游戏文档",
    "keywords": "Class SpawnSoldierButton 生成士兵按钮 Inheritance System.Object SpawnSoldierButton Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class SpawnSoldierButton : MonoBehaviour Methods SetInfo(ISoldierSpawnInfo, OperationalBase) 设置信息 Declaration public void SetInfo(ISoldierSpawnInfo soldierSpawnInfo, OperationalBase operationalBase) Parameters Type Name Description ISoldierSpawnInfo soldierSpawnInfo 士兵生成信息 OperationalBase operationalBase 士兵基地面板"
  },
  "api/GameUI.UIManager.html": {
    "href": "api/GameUI.UIManager.html",
    "title": "Class UIManager | 游戏文档",
    "keywords": "Class UIManager UI管理器 单例模式，在此保存了其他UI脚本的引用，游戏内使用UI从这里调用 Inheritance System.Object Singleton < UIManager > UIManager Inherited Members Singleton<UIManager>.Instance Singleton<UIManager>.Awake() Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class UIManager : Singleton<UIManager> Fields basePanel Declaration public BasePanel basePanel Field Value Type Description BasePanel collectableResourcesPanel Declaration public CollectableResourcesPanel collectableResourcesPanel Field Value Type Description CollectableResourcesPanel gameOverPanel Declaration public GameOverPanel gameOverPanel Field Value Type Description GameOverPanel messageTips Declaration public MessageTips messageTips Field Value Type Description MessageTips miniMap Declaration public MiniMap miniMap Field Value Type Description MiniMap mouseOverMessageBoxesSystem Declaration public MouseOverMessageBoxesSystem mouseOverMessageBoxesSystem Field Value Type Description MouseOverMessageBoxesSystem skillPanel Declaration public SkillPanel skillPanel Field Value Type Description SkillPanel soldierInfoUI Declaration public SoldierInfoUI soldierInfoUI Field Value Type Description SoldierInfoUI"
  },
  "api/GameUI.UIStaticMethods.html": {
    "href": "api/GameUI.UIStaticMethods.html",
    "title": "Class UIStaticMethods | 游戏文档",
    "keywords": "Class UIStaticMethods UI静态方法 Inheritance System.Object UIStaticMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public static class UIStaticMethods Methods GetRandomHit<T>(RaycastHit2D[]) 获取随机射线击中的物体 Declaration public static T GetRandomHit<T>(RaycastHit2D[] hits) where T : MonoBehaviour Parameters Type Name Description RaycastHit2D [] hits 射线检测信息 Returns Type Description T 随机物体 Type Parameters Name Description T 物体类型 RefreshItems<T>(List<T>, Int32, Action, Action<Int32>) 刷新列表为指定数量 Declaration public static void RefreshItems<T>(List<T> itemList, int refreshNumber, Action instantiateAction, Action<int> destroyAction) Parameters Type Name Description List <T> itemList 列表 System.Int32 refreshNumber 刷新的数量 Action instantiateAction 实例化方法 Action < System.Int32 > destroyAction 删除方法 \"删除的数组索引\" Type Parameters Name Description T WorldToUILocalPoint(Camera, Vector3, RectTransform) 世界坐标转UI本地坐标 Declaration public static Vector2 WorldToUILocalPoint(Camera camera, Vector3 targetPoint, RectTransform rectTransform) Parameters Type Name Description Camera camera 摄像机 Vector3 targetPoint 世界坐标 RectTransform rectTransform UI父物体 Returns Type Description Vector2 UI本地坐标"
  },
  "api/GameUI.UploadModPanel.html": {
    "href": "api/GameUI.UploadModPanel.html",
    "title": "Class UploadModPanel | 游戏文档",
    "keywords": "Class UploadModPanel 上传模组面板 Inheritance System.Object UploadModPanel Namespace : GameUI Assembly : cs.temp.dll.dll Syntax public class UploadModPanel : MonoBehaviour"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API文档 | 游戏文档",
    "keywords": "API文档 为了防止团队合作效率太低，问来问去，没注释的脚本可读性较差等状况，在这里编写API文档 功在当代，利在千秋︿(￣︶￣)︿ 此文档跟随游戏项目迭代，每次提交版本时生成一次 所以不需要被调用的方法等等都设为私有，不需要调用的变量改 [SerializeField] private"
  },
  "api/MySteam.html": {
    "href": "api/MySteam.html",
    "title": "Namespace MySteam | 游戏文档",
    "keywords": "Namespace MySteam Classes SteamWorkshop Steam创意工坊"
  },
  "api/MySteam.SteamWorkshop.html": {
    "href": "api/MySteam.SteamWorkshop.html",
    "title": "Class SteamWorkshop | 游戏文档",
    "keywords": "Class SteamWorkshop Steam创意工坊 Inheritance System.Object Singleton < SteamWorkshop > SteamWorkshop Inherited Members Singleton<SteamWorkshop>.Instance Namespace : MySteam Assembly : cs.temp.dll.dll Syntax public class SteamWorkshop : Singleton<SteamWorkshop> Methods Awake() Declaration protected override void Awake() Overrides GameInterface.Singleton<MySteam.SteamWorkshop>.Awake() GetSubscribedItems(out UInt64[], out String[]) 获取已订阅物品的id和本地路径 Declaration public static void GetSubscribedItems(out ulong[] publishedFileIds, out string[] paths) Parameters Type Name Description System.UInt64 [] publishedFileIds 物品id System.String [] paths 物品本地路径 OpenSteamItemPage(UInt64) 打开创意工坊物品界面 Declaration public void OpenSteamItemPage(ulong publishedFileId) Parameters Type Name Description System.UInt64 publishedFileId UploadContent(String, String, String, String[], String, String, Int32, Text, Action) 上传steam物品 Declaration public void UploadContent(string itemTitle, string itemDescription, string contentFolderPath, string[] tags, string previewImagePath, string changeNote, int VisibilityType, Text uploadStatusText, Action uploadCompleteAction) Parameters Type Name Description System.String itemTitle 物品标题 System.String itemDescription 物品描述 System.String contentFolderPath 物品内容文件夹 System.String [] tags 物品标签 System.String previewImagePath 物品预览图片 System.String changeNote 改动说明 System.Int32 VisibilityType 物品可见性 Text uploadStatusText 状态文本 Action uploadCompleteAction 完成事件"
  },
  "api/ObjectPool.html": {
    "href": "api/ObjectPool.html",
    "title": "Namespace ObjectPool | 游戏文档",
    "keywords": "Namespace ObjectPool Classes ObjectPool<T> 对象池 ObjectPoolManager 对象池管理器"
  },
  "api/ObjectPool.ObjectPool-1.html": {
    "href": "api/ObjectPool.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | 游戏文档",
    "keywords": "Class ObjectPool<T> 对象池 Inheritance System.Object ObjectPool<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : ObjectPool Assembly : cs.temp.dll.dll Syntax public class ObjectPool<T> Type Parameters Name Description T 对象类型 Constructors ObjectPool(Func<T>, Action<T>, Int32, Int32) Declaration public ObjectPool(Func<T> instantiateFunc, Action<T> destoyAction, int maxNumber, int initialSize) Parameters Type Name Description Func <T> instantiateFunc 实例化函数 Action <T> destoyAction 删除事件 System.Int32 maxNumber 最大数量（0为不限制） System.Int32 initialSize 初始数量 Properties Count 对象池总数量 Declaration public int Count { get; } Property Value Type Description System.Int32 CountUsedItems 已用数量 Declaration public int CountUsedItems { get; } Property Value Type Description System.Int32 IsDestroyed 是否已被摧毁 Declaration public bool IsDestroyed { get; } Property Value Type Description System.Boolean MaxNumber 最大长度 Declaration public int MaxNumber { get; } Property Value Type Description System.Int32 TotalDestroy 摧毁次数 Declaration public int TotalDestroy { get; set; } Property Value Type Description System.Int32 TotalInstantiate 实例化次数 Declaration public int TotalInstantiate { get; set; } Property Value Type Description System.Int32 Methods ClearPool() 清空空闲对象 Declaration public void ClearPool() DestroyPool() 删除此对象池 Declaration public T[] DestroyPool() Returns Type Description T[] 使用中的对象 GetItem() 获取空闲对象 Declaration public T GetItem() Returns Type Description T 空闲对象 ReleaseItem(T) 释放对象 Declaration public void ReleaseItem(T item) Parameters Type Name Description T item 要释放的对象 ReleaseItem(Object) 释放对象 Declaration public void ReleaseItem(object item) Parameters Type Name Description System.Object item 要释放的对象 Warm(Int32) 预热 Declaration public void Warm(int capacity) Parameters Type Name Description System.Int32 capacity 数量"
  },
  "api/ObjectPool.ObjectPoolManager.html": {
    "href": "api/ObjectPool.ObjectPoolManager.html",
    "title": "Class ObjectPoolManager | 游戏文档",
    "keywords": "Class ObjectPoolManager 对象池管理器 Inheritance System.Object Singleton < ObjectPoolManager > ObjectPoolManager Inherited Members Singleton<ObjectPoolManager>.Instance Singleton<ObjectPoolManager>.Awake() Namespace : ObjectPool Assembly : cs.temp.dll.dll Syntax public class ObjectPoolManager : Singleton<ObjectPoolManager> Fields logStatus 是否开启状态调试日志 Declaration public bool logStatus Field Value Type Description System.Boolean Methods ClearObjectPool(GameObject) 清除对象池内空闲物体 Declaration public void ClearObjectPool(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 ClearObjectPoolStatic(GameObject) 清除对象池内空闲物体 Declaration public static void ClearObjectPoolStatic(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 CreatObjectPool(GameObject, Func<GameObject, GameObject>, Action<GameObject>, Int32, Int32) 创建对象池 Declaration public ObjectPool<GameObject> CreatObjectPool(GameObject prefab, Func<GameObject, GameObject> instantiateFunc, Action<GameObject> destoyAction, int maxNumber = 10, int initialSize = 5) Parameters Type Name Description GameObject prefab 对象预制体 Func < GameObject , GameObject > instantiateFunc 实例化方法 Action < GameObject > destoyAction 删除事件 System.Int32 maxNumber 最大数量（0为不限制） System.Int32 initialSize 初始数量 Returns Type Description ObjectPool < GameObject > 生成的对象池 CreatPoolStatic(GameObject, Func<GameObject, GameObject>, Action<GameObject>, Int32, Int32) 创建对象池 Declaration public static void CreatPoolStatic(GameObject prefab, Func<GameObject, GameObject> instantiateFunc, Action<GameObject> destoyAction, int maxNumber = 10, int initialSize = 5) Parameters Type Name Description GameObject prefab 对象预制体 Func < GameObject , GameObject > instantiateFunc 实例化方法 Action < GameObject > destoyAction 删除事件 System.Int32 maxNumber 最大数量（0为不限制） System.Int32 initialSize 初始数量 DestroyObjectPool(GameObject) 摧毁对象池 Declaration public GameObject[] DestroyObjectPool(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description GameObject [] 使用中的物体 DestroyObjectPoolStatic(GameObject) 摧毁对象池 Declaration public static GameObject[] DestroyObjectPoolStatic(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description GameObject [] 使用中的物体 GetObject(GameObject) 获取池内对象 Declaration public GameObject GetObject(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description GameObject 实例化对象 GetObjectPool(GameObject) 获取对象池 Declaration public ObjectPool<GameObject> GetObjectPool(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description ObjectPool < GameObject > 对象池 GetObjectPoolStatic(GameObject) 获取对象池 Declaration public static ObjectPool<GameObject> GetObjectPoolStatic(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description ObjectPool < GameObject > 对象池 GetObjectStatic(GameObject) 获取池内对象 Declaration public static GameObject GetObjectStatic(GameObject prefab) Parameters Type Name Description GameObject prefab 预制体 Returns Type Description GameObject 实例化对象 PrintStatus() 输出对象池状态 Declaration public void PrintStatus() ReleaseObject(GameObject) 释放对象 Declaration public void ReleaseObject(GameObject clone) Parameters Type Name Description GameObject clone 实例化对象 ReleaseObjectStatic(GameObject) 释放对象 Declaration public static void ReleaseObjectStatic(GameObject clone) Parameters Type Name Description GameObject clone 实例化对象 WarmObjectPool(GameObject, Int32) 预热对象池 Declaration public void WarmObjectPool(GameObject prefab, int number) Parameters Type Name Description GameObject prefab 预制体 System.Int32 number 预热数量 WarmObjectPoolStatic(GameObject, Int32) 预热对象池 Declaration public static void WarmObjectPoolStatic(GameObject prefab, int number) Parameters Type Name Description GameObject prefab 预制体 System.Int32 number 预热数量"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | 游戏文档",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "manual/intro.html": {
    "href": "manual/intro.html",
    "title": "介绍 | 游戏文档",
    "keywords": "介绍 待填写"
  }
}